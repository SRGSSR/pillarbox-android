/*
 * Copyright (c) SRG SSR. All rights reserved.
 * License information is available from the LICENSE file.
 */
package ch.srgssr.pillarbox.cast.receiver.extensions

import androidx.media3.common.util.Util
import com.google.android.gms.cast.MediaQueueItem
import com.google.android.gms.cast.tv.media.MediaQueueManager

/**
 * The [MediaQueueManager.getQueueItems] size or zero if null.
 */
val MediaQueueManager.queueSize: Int
    get() = queueItems?.size ?: 0

/**
 * @return the item index of [itemId], -1 if not found.
 */
fun MediaQueueManager.getItemIndex(itemId: Int): Int {
    return checkNotNull(queueItems).indexOfFirst { it.itemId == itemId }
}

/**
 * @return the item index of [itemId], return null if not found.
 */
fun MediaQueueManager.getItemIndexOrNull(itemId: Int): Int? {
    return getItemIndex(itemId).takeIf { it != -1 }
}

/**
 * @return true if [itemId] is in [MediaQueueManager.getQueueItems]
 */
fun MediaQueueManager.contains(itemId: Int): Boolean {
    return getItemIndexOrNull(itemId) != null
}

/**
 * Move items like [androidx.media3.common.Player.moveMediaItems]
 */
fun MediaQueueManager.move(fromIndex: Int, toIndex: Int, newIndex: Int) {
    Util.moveItems(checkNotNull(queueItems), fromIndex, toIndex, newIndex)
}

/**
 * Remove items like [androidx.media3.common.Player.removeMediaItem]
 */
fun MediaQueueManager.remove(index: Int): Int {
    return checkNotNull(queueItems).removeAt(index).itemId
}

/**
 * Remove items like [androidx.media3.common.Player.removeMediaItems]
 */
fun MediaQueueManager.remove(fromIndex: Int, toIndex: Int) {
    Util.removeRange(checkNotNull(queueItems), fromIndex, toIndex)
}

/**
 * Set [MediaQueueManager.getQueueItems] with new [MediaQueueItem] with autogenerated item id.
 */
fun MediaQueueManager.setMediaItems(items: List<MediaQueueItem>, startIndex: Int) {
    items.forEach { queueItem -> queueItem.writer.apply { setItemId(autoGenerateItemId()) } }
    queueItems = items.toMutableList()
    currentItemId = items[startIndex].itemId
}

/**
 * Insert [itemsToAdd] to [MediaQueueManager.getQueueItems] at [insertIndex] with autogenerated item id.
 */
fun MediaQueueManager.insert(itemsToAdd: List<MediaQueueItem>, insertIndex: Int = Int.MAX_VALUE) {
    check(insertIndex >= 0)
    val queueItems = checkNotNull(queueItems)
    itemsToAdd.forEach { queueItem ->
        queueItem.writer.apply {
            setItemId(autoGenerateItemId())
        }
    }
    if (insertIndex >= queueItems.size) {
        queueItems.addAll(itemsToAdd)
    } else {
        queueItems.addAll(insertIndex, itemsToAdd)
    }
}
