name: Quality

on:
  merge_group:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  android-lint:
    name: Android Lint
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Android Lint
        run: >
          ./gradlew
          :pillarbox-demo:lintProdDebug
          :pillarbox-demo-cast:lintDebug
          :pillarbox-demo-tv:lintDebug
          :pillarbox-player-testutils:lintDebug
      - name: Upload Android Lint results
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: build/reports/android-lint/
          category: android-lint

  detekt:
    name: Detekt
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Detekt
        run: ./gradlew detekt
      - name: Upload Detekt results
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/
          category: detekt

  dependency-analysis:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Dependency Analysis
        run: ./gradlew buildHealth

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Unit Tests
        run: >
          ./gradlew
          :build-logic:plugins:koverXmlReport
          :pillarbox-analytics:koverXmlReportDebug
          :pillarbox-cast:koverXmlReportDebug
          :pillarbox-core-business:koverXmlReportDebug
          :pillarbox-core-business-cast:koverXmlReportDebug
          :pillarbox-player:koverXmlReportDebug
          :pillarbox-ui:koverXmlReportDebug
      - name: Report Code Coverage
        if: ${{ github.event_name == 'pull_request' }}
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/**/build/reports/kover/**.xml
          token: ${{ github.token }}
          min-coverage-overall: 0
          min-coverage-changed-files: 0
          update-comment: true
          title: Code Coverage
          pass-emoji: ðŸŸ¢
          fail-emoji: ðŸ”´

  android-tests:
    name: Android Tests
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ github.token }}
    strategy:
      matrix:
        api-level: [ 26 ]
    steps:
      - name: Enable KVM
        # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          # Supported tasks per module
          # :pillarbox-analytics:connectedDebugAndroidTest
          # :pillarbox-core-business:connectedDebugAndroidTest
          # :pillarbox-player:connectedDebugAndroidTest
          # :pillarbox-ui:connectedDebugAndroidTest
          script: ./gradlew :pillarbox-player:connectedDebugAndroidTest
